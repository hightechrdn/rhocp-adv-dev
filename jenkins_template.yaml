kind: Template
apiVersion: v1
metadata:
  annotations:
    description: Jenkins automation server (https://jenkins.io/)
    tags: instant-app,jenkins
  name: jenkins
  labels:
    template: jenkins_template
objects:
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${APPLICATION_NAME}"}}'
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: ${ENABLE_OAUTH}
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JENKINS_SERVICE_NAME
            value: ${APPLICATION_NAME}
          - name: JNLP_SERVICE_NAME
            value: jnlp-${APPLICATION_NAME}
          - name: MAVEN_APPDEV_XML
            valueFrom:
              configMapKeyRef:
                key: maven-appdev.xml
                name: maven-appdev
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: jenkins
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              memory: ${JENKINS_MEMORY_LIMIT}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: ${APPLICATION_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccountName: ${APPLICATION_NAME}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APPLICATION_NAME}-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-data
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: jenkins:${JENKINS_VERSION}
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-data
    labels:
      app: ${APPLICATION_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${JENKINS_VOLUME_CAPACITY}
- kind: Route
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: ${APPLICATION_NAME}
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- kind: Service
  apiVersion: v1
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION_NAME}
    name: jnlp-${APPLICATION_NAME}
  spec:
    ports:
    - name: agent-${APPLICATION_NAME}
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- kind: RoleBinding
  groupNames: null
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}_edit
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: ${APPLICATION_NAME}    
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: jenkins-slave-maven-appdev
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker.io/mcdmike74/jenkins-slave-maven-appdev:v3.9
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: maven-appdev
    labels:
      role: jenkins-slave
  data:
    maven-appdev.xml: |2
            <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
              <inheritFrom></inheritFrom>
              <name>maven-appdev</name>
              <namespace></namespace>
              <privileged>false</privileged>
              <alwaysPullImage>false</alwaysPullImage>
              <instanceCap>2147483647</instanceCap>
              <slaveConnectTimeout>100</slaveConnectTimeout>
              <idleMinutes>0</idleMinutes>
              <label>maven-appdev</label>
              <serviceAccount>jenkins</serviceAccount>
              <nodeSelector></nodeSelector>
              <nodeUsageMode>NORMAL</nodeUsageMode>
              <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
              <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
                <memory>false</memory>
              </workspaceVolume>
              <volumes/>
              <containers>
                <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
                  <name>jnlp</name>
                  <image>docker-registry.default.svc:5000/${PROJECT}/jenkins-slave-maven-appdev:latest</image>
                  <privileged>false</privileged>
                  <alwaysPullImage>false</alwaysPullImage>
                  <workingDir>/tmp</workingDir>
                  <command></command>
                  <args>${computer.jnlpmac} ${computer.name}</args>
                  <ttyEnabled>false</ttyEnabled>
                  <resourceRequestCpu></resourceRequestCpu>
                  <resourceRequestMemory></resourceRequestMemory>
                  <resourceLimitCpu></resourceLimitCpu>
                  <resourceLimitMemory>2Gi</resourceLimitMemory>
                  <envVars/>
                  <ports/>
                  <livenessProbe>
                    <execArgs></execArgs>
                    <timeoutSeconds>0</timeoutSeconds>
                    <initialDelaySeconds>0</initialDelaySeconds>
                    <failureThreshold>0</failureThreshold>
                    <periodSeconds>0</periodSeconds>
                    <successThreshold>0</successThreshold>
                  </livenessProbe>
                </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
              </containers>
              <envVars/>
              <annotations/>
              <imagePullSecrets/>
            </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: jenkins
- description: 'Hostname for service routes e.g.: <application-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME
  required: true
- description: Volume space available for data, e.g. 512Mi, 2Gi
  name: JENKINS_VOLUME_CAPACITY
  required: true
  value: 4Gi
- description: Jenkins memory limit, e.g. 512Mi, 2Gi
  name: JENKINS_MEMORY_LIMIT
  required: true
  value: 2Gi
- description: 'Version of the Nexus container image to be used (check the available version https://hub.docker.com/r/sonatype/nexus3/tags)'
  name: JENKINS_VERSION  
  required: true
  value: "latest"
- description: Whether to enable OAuth OpenShift integration. If false, the static
    account 'admin' will be initialized with the password 'password'.
  displayName: Enable OAuth in Jenkins
  name: ENABLE_OAUTH
  value: "true"
- description: Current project name (i.e. namespace)
  name: PROJECT
  required: true  


  
