kind: Template
apiVersion: v1
metadata:
  name: mlbparks-eap
  annotations:
    iconClass: icon-jboss
    description: MLB Parks application on EAP 6 & MongoDB built using STI - RHOCP Adv Dev Class - NO Mongo DB - Development
labels:
  app: mlbparks
  createdBy: template-mlbparks-eap-no-monogo-dev
objects:
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      build: "${APPLICATION_NAME}"
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:latest"
    runPolicy: Serial
    triggers:
    - type: Generic
      generic:
        secret: "${GENERIC_TRIGGER_SECRET}"
    - type: GitHub
      github:
        secret: "${GITHUB_TRIGGER_SECRET}"
    - type: ImageChange
      imageChange: {}
    source:
      binary: {}
      type: binary
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: jboss-eap64-openshift:1.7
        env:
        - name: MAVEN_MIRROR_URL
          value: "${MAVEN_MIRROR_URL}"
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
  spec:
    dockerImageRepository: ''
    tags:
    - name: 0.0-0
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      deploymentConfig: "${APPLICATION_NAME}"
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          deploymentConfig: "${APPLICATION_NAME}"
      spec:
        containers:
        - name: "${APPLICATION_NAME}"
          image: "docker-registry.default.svc:5000/${PROJECT}/${APPLICATION_NAME}:0.0-0"
          ports:
          - name: "${APPLICATION_NAME}-http"
            containerPort: 8080
            protocol: TCP
          - name: "${APPLICATION_NAME}-ping"
            containerPort: 8888
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: "/"
              port: 8080
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: "/"
              port: 8080
          env:
          - name: DB_HOST
            value: "${MONGODB_SERVICE_NAME}"
          - name: DB_PORT
            value: "27017"
          - name: DB_USER
            value: "${MONGODB_USER}"
          - name: DB_PASSWORD
            value: "${MONGODB_PASSWORD}"
          - name: DB_NAME
            value: "${MONGODB_DATABASE}"
          - name: DB_REPLICASET
            value: "${MONGODB_REPLICA_NAME}"
          resources: {}
          terminationMessagePath: "/dev/termination-log"
          volumeMounts:
          - mountPath: /opt/eap/standalone/configuration/application-users.properties
            name: jboss-config
            subPath: application-users.properties
          - mountPath: /opt/eap/standalone/configuration/application-roles.properties
            name: jboss-config1
            subPath: application-roles.properties
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities: {}
            privileged: false
        restartPolicy: Always
        dnsPolicy: ClusterFirst
        volumes:
        - configMap:
            defaultMode: 420
            name: mlbparks-config
          name: jboss-config
        - configMap:
            defaultMode: 420
            name: mlbparks-config
          name: jboss-config1
- kind: Route
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      description: Route for application's http service
  spec:
    host: "${APPLICATION_HOSTNAME}"
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    annotations:
      description: The web server's http port
  spec:
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: "${APPLICATION_NAME}"
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: mlbparks-config
    labels:
      app: ${APPLICATION_NAME}
  data:
    application-roles.properties: Placeholder
    application-users.properties: Placeholder
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  value: mlbparks
- description: 'Custom hostname for service routes.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>'
  name: APPLICATION_HOSTNAME
- description: Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci.apps.10.2.2.2.xip.io/content/groups/public/)
  name: MAVEN_MIRROR_URL
  displayName: Maven mirror url
  required: false
- description: Database name
  name: MONGODB_DATABASE
  value: parksmap
- description: Disable data file preallocation.
  name: MONGODB_NOPREALLOC
- description: Set MongoDB to use a smaller default data file size.
  name: MONGODB_SMALLFILES
- description: Runs MongoDB in a quiet mode that attempts to limit the amount of output.
  name: MONGODB_QUIET
- description: Database user name
  name: MONODB_USER
  value: mongodb_user
- description: Database user password
  name: MONGODB_PASSWORD
  value: mongodb_password
- description: Database admin password
  name: MONGODB_ADMIN_PASSWORD
  value: mongodb_admin_password
  generate: expression
- description: Github trigger secret
  name: GITHUB_TRIGGER_SECRET
  from: "[a-zA-Z0-9]{8}"
  generate: expression
- description: Generic build trigger secret
  name: GENERIC_TRIGGER_SECRET
  from: "[a-zA-Z0-9]{8}"
  generate: expression
- description: Database service name
  name: MONGODB_SERVICE_NAME
  value: mongodb-internal
- description: Database replica name
  name: MONGODB_REPLICA_NAME
  value: rs0
- description: Current project name (i.e. namespace)
  name: PROJECT
  required: true  
