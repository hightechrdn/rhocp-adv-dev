kind: Template
apiVersion: v1
metadata:
  annotations:
    description: MongoDB database service deployed as a StatefulSet with N replicas
    tags: instant-app,mongodb
  name: mongodb
labels:
  app: ${APPLICATION_NAME}
  createdBy: mongodb-statefulset-template
objects:
- kind: StatefulSet
  apiVersion: apps/v1beta1
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    serviceName: ${APPLICATION_NAME}-internal
    replicas: ${{NUMBER_REPLICAS}}
    selector:
      matchLabels:
        name: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
      spec:
        containers:
          - name: ${APPLICATION_NAME}-container
            image: "registry.access.redhat.com/rhscl/mongodb-34-rhel7:latest"
            ports:
              - containerPort: 27017
            args:
              - "run-mongod-replication"
            volumeMounts:
              - name: ${APPLICATION_NAME}-data
                mountPath: "/var/lib/mongodb/data"
            env:
              - name: MONGODB_DATABASE
                value: ${MONGODB_DATABASE}
              - name: MONGODB_USER
                value: ${MONGODB_USER}
              - name: MONGODB_PASSWORD
                value: ${MONGODB_PASSWORD}
              - name: MONGODB_ADMIN_PASSWORD
                value: ${MONGODB_ADMIN_PASSWORD}
              - name: MONGODB_REPLICA_NAME
                value: ${MONGODB_REPLICA_NAME}
              - name: MONGODB_KEYFILE_VALUE
                value: ${MONGODB_KEYFILE_VALUE}
              - name: MONGODB_SERVICE_NAME
                value: ${APPLICATION_NAME}-internal
            readinessProbe:
              exec:
                command:
                  - stat
                  - /tmp/initialized
    volumeClaimTemplates:
      - metadata:
          name: ${APPLICATION_NAME}-data
          labels:
            name: ${APPLICATION_NAME}
        spec:
          accessModes: [ ReadWriteOnce ]
          resources:
            requests:
              storage: "4Gi"
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    type: ClusterIP
    ports:
      - name: ${APPLICATION_NAME}
        port: 27017
    selector:
      name: ${APPLICATION_NAME}
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-internal
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  spec:
    clusterIP: None
    ports:
      - name: ${APPLICATION_NAME}
        port: 27017
    selector:
      name: ${APPLICATION_NAME}
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: mongodb
- description: Database name
  name: MONGODB_DATABASE
  value: mongodb
- description: Disable data file preallocation.
  name: MONGODB_NOPREALLOC
- description: Set MongoDB to use a smaller default data file size.
  name: MONGODB_SMALLFILES
- description: Runs MongoDB in a quiet mode that attempts to limit the amount of output.
  name: MONGODB_QUIET
- description: Database user name
  name: MONGODB_USER
  value: mongodb_user
- description: Database user password
  name: MONGODB_PASSWORD
  value: mongodb_password
- description: Password for the database admin user.
  displayName: MongoDB Admin Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MONGODB_ADMIN_PASSWORD
  required: true
- description: Database replica name
  name: MONGODB_REPLICA_NAME
  value: rs0
- description: Database keyfile value
  name: MONGODB_KEYFILE_VALUE
  value: "12345678901234567890"
- description: Number of database replicas
  name: NUMBER_REPLICAS
  value: "3"