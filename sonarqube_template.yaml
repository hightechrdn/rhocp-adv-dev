kind: Template
apiVersion: v1
metadata:
  annotations:
    description: SonarQube Continuous Insprection (https://www.sonarqube.org/)
    tags: instant-app,sonarqube	
  name: ${APPLICATION_NAME}
objects:
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      description: Exposes the database server
    name: ${APPLICATION_NAME}-postgresql
    labels:
      app: ${APPLICATION_NAME}
  spec:
    ports:
    - name: ${APPLICATION_NAME}-postgresql
      port: 5432
      targetPort: 5432
    selector:
      name: ${APPLICATION_NAME}-postgresql
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    annotations:
      description: Defines how to deploy the database
    name: ${APPLICATION_NAME}-postgresql
    labels:
      app: ${APPLICATION_NAME}
  spec:
    revisionHistoryLimit: 10
    replicas: 1
    selector:
      name: ${APPLICATION_NAME}-postgresql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${APPLICATION_NAME}-postgresql
        name: ${APPLICATION_NAME}-postgresql
      spec:
        serviceAccountName: ${APPLICATION_NAME}
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: ${DATABASE_USER}
          - name: POSTGRESQL_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: ${DATABASE_NAME}
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: ${DATABASE_MAX_CONNECTIONS}
          - name: POSTGRESQL_SHARED_BUFFERS
            value: ${DATABASE_SHARED_BUFFERS}
          - name: POSTGRESQL_ADMIN_PASSWORD
            value: ${DATABASE_ADMIN_PASSWORD}
          image: ' '
          livenessProbe:
            initialDelaySeconds: 60
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
            failureThreshold: 10
            periodSeconds: 20
          name: ${APPLICATION_NAME}-postgresql
          ports:
          - containerPort: 5432
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            failureThreshold: 10
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: ${APPLICATION_NAME}-postgres-data
        volumes:
        - name: ${APPLICATION_NAME}-postgres-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-postgres-data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
      description: SonarQube server's http port
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: ${APPLICATION_NAME}
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- kind: Route
  apiVersion: v1
  id: ${APPLICATION_NAME}-http
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME}
    to:
      name: ${APPLICATION_NAME}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    revisionHistoryLimit: 10
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        serviceAccountName: ${APPLICATION_NAME}
        containers:
        - image: " "
          imagePullPolicy: IfNotPresent
          name: ${APPLICATION_NAME}
          env:
            - name: SONARQUBE_JDBC_USERNAME
              value: ${DATABASE_USER}
            - name: SONARQUBE_JDBC_PASSWORD
              value: ${DATABASE_PASSWORD}
            - name: SONARQUBE_JDBC_URL
              value: jdbc:postgresql://${APPLICATION_NAME}-postgresql/${DATABASE_NAME}
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - name: ${APPLICATION_NAME}-data
            mountPath: /opt/sonarqube/data/
          readinessProbe:
            httpGet:
              path: /about
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            exec:
              command:
              - echo
              - ok
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: "1"
              memory: 2Gi            
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APPLICATION_NAME}-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:${SONARQUBE_VERSION}
      type: ImageChange
- kind: ImageStream
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    tags:
    - name: "${SONARQUBE_VERSION}"
      from:
        kind: DockerImage
        name:  wkulhanek/sonarqube:${SONARQUBE_VERSION}
      importPolicy: {}
      annotations:
        description: The SonarQube Continuous Inspection server docker image
        tags: sonarqube
        version: "${SONARQUBE_VERSION}"
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-data
    labels:
      app: ${APPLICATION_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${SONARQUBE_VOLUME_CAPACITY}
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}-postgres-data
    labels:
      app: ${APPLICATION_NAME}
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${DB_VOLUME_CAPACITY}
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: sonarqube
- description: 'Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME
  required: true
- description: Volume space available for data, e.g. 512Mi, 2Gi
  name: SONARQUBE_VOLUME_CAPACITY
  required: true
  value: 4Gi
- description: Volume space available for postregs data, e.g. 512Mi, 2Gi
  name: DB_VOLUME_CAPACITY
  required: true
  value: 4Gi
- displayName: Database Username
  from: sonarqube
  value: sonarqube
  name: DATABASE_USER
- displayName: Database Password
  from: '[a-zA-Z0-9]{8}'
  value: sonarqube
  name: DATABASE_PASSWORD
- displayName: Database Name
  name: DATABASE_NAME
  value: sonarqube
- displayName: Database Admin Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: DATABASE_ADMIN_PASSWORD
- displayName: Maximum Database Connections
  name: DATABASE_MAX_CONNECTIONS
  value: "100"
- displayName: Shared Buffer Amount
  name: DATABASE_SHARED_BUFFERS
  value: 12MB
- name: SONARQUBE_VERSION
  displayName: SonarQube Version
  description: 'Version of the SonarQube container image to be used (check the available version https://hub.docker.com/r/openshiftdemos/sonarqube/tags)'
  value: "6.7.3"
  required: true